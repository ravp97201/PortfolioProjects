/*

Cleaning Data in SQL Queries

*/


Select *
From portfolioProject.dbo.NashvilleHousing


----------------------------------------------------

-- Standardize Date Format




Select SaleDateConverted, CONVERT(Date,SaleDate)
From portfolioProject.dbo.NashvilleHousing 

Update NashvilleHousing
SET SaleDate = CONVERT(Date,SaleDate)

ALTER TABLE NashvilleHousing
Add SaleDateConverted Date

Update NashvilleHousing
SET SaleDateConverted = CONVERT(Date,SaleDate)


---------------------------------------------------------

-- Populate Property Address data


Select *
From portfolioProject.dbo.NashvilleHousing 
--Where PropertyAddress is null
order by ParcelID




Select a.ParcelID, a.PropertyAddress, b.ParcelID, b.PropertyAddress, ISNULL(a.PropertyAddress, b.PropertyAddress)
From portfolioProject.dbo.NashvilleHousing a 
JOIN portfolioProject.dbo.NashvilleHousing b
ON a.ParcelID = b.ParcelID
AND a.[UniqueID ] <> b.[UniqueID ]
Where a.PropertyAddress is null


Update a
SET PropertyAddress = ISNULL(a.PropertyAddress, b.PropertyAddress)
From portfolioProject.dbo.NashvilleHousing a 
JOIN portfolioProject.dbo.NashvilleHousing b
ON a.ParcelID = b.ParcelID
AND a.[UniqueID ] <> b.[UniqueID ]
where a.PropertyAddress is Null



--------------------------------------------------------------------------

-- Breaking out Address into Individual Columns (Address,City,State)


Select PropertyAddress
From portfolioProject.dbo.NashvilleHousing 
--Where PropertyAddress is null
order by ParcelID

Select
SUBSTRING(PropertyAddress, 1, CHARINDEX(',', PropertyAddress) -1) as Address
, SUBSTRING(PropertyAddress, CHARINDEX(',', PropertyAddress) + 1 , LEN(PropertyAddress)) as Address
From portfolioProject.dbo.NashvilleHousing

ALTER TABLE NashvilleHousing
Add PropertySplitAddress Nvarchar(255);

Update NashvilleHousing
SET PropertySplitAddress = SUBSTRING(PropertyAddress, 1, CHARINDEX(',', PropertyAddress) -1)

ALTER TABLE NashvilleHousing
ADD PropertySplitCity Nvarchar(255);

Update NashVilleHousing
SET PropertySplitCity = SUBSTRING(PropertyAddress, CHARINDEX(',' , PropertyAddress) + 1, LEN(PropertyAddress))




Select *
From portfolioProject.dbo.NashvilleHousing




Select OwnerAddress
From portfolioProject.dbo.NashvilleHousing


Select
PARSENAME(REPLACE(OwnerAddress, ',', '.'),3)
,PARSENAME(REPLACE(OwnerAddress, ',', '.'),2)
,PARSENAME(REPLACE(OwnerAddress, ',', '.'),1)
From portfolioProject.dbo.NashvilleHousing




ALTER TABLE NashvilleHousing
Add OwnerSplitAddress Nvarchar(255);

Update NashvilleHousing
SET OwnerSplitAddress = PARSENAME(REPLACE(OwnerAddress, ',', '.') , 3)


ALTER TABLE NashvilleHousing
Add OwnerSplitCity Nvarchar(255);

Update NashvilleHousing
SET OwnerSplitCity = PARSENAME(REPLACE(OwnerAddress, ',', '.') , 2)



ALTER TABLE NashvilleHousing
Add OwnerSplitState Nvarchar(255);

Update NashvilleHousing
SET OwnerSplitState = PARSENAME(REPLACE(OwnerAddress, ',', '.') , 1)



-------------------------------------------------------------------------------


-- Change Y and N to YES and NO in "Sold as Vacant" Field


Select Distinct(SoldAsVacant), Count(SoldAsVacant)
From portfolioProject.dbo.NashvilleHousing
Group by SoldAsVacant
order by 2

ALTER TABLE NashvilleHousing
ALTER COLUMN SoldAsVacant Varchar(255);


Select SoldAsVacant
, CASE When SoldAsVacant = 0 THEN 'YES'
	   When SoldAsVacant = 1 THEN 'NO'
	   ELSE SoldAsVacant
	   END


UPDATE NashvilleHousing
SET SoldAsVacant = CASE
	When SoldAsVacant = '0' THEN 'YES'
	   When SoldAsVacant = '1' THEN 'NO'
	   ELSE SoldAsVacant
	   END; 

--------------------------------------------------------------------


--Remove Duplicates

WITH RowNumCTE AS(
Select *,
	ROW_NUMBER() OVER ( 
	Partition by ParcelID,
	PropertyAddress,
	SalePrice,
	SaleDate,
	LegalReference
	ORDER BY 
		UniqueID
		) row_num

From portfolioProject.dbo.NashvilleHousing
--Order By ParcelID
)
DELETE
from RowNumCTE
Where row_num > 1
--Order by PropertyAddress



-----------------------------------------------

--Delete Unused Columns


Select *
From portfolioProject.dbo.NashvilleHousing


ALTER TABLE portfolioProject.dbo.NashvilleHousing
DROP COLUMN OwnerAddress, TaxDistrict, PropertyAddress, SaleDate
